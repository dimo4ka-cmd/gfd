import discord
from discord import app_commands
from discord.ui import Modal, TextInput, Button, View
import asyncio

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–æ–≤
intents = discord.Intents.default()
intents.members = True  # –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞
client = discord.Client(intents=intents)
tree = app_commands.CommandTree(client)

# –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /—É–≤–æ–ª—å–Ω–µ–Ω–∏–µ
class DismissalModal(Modal, title="–£–≤–æ–ª—å–Ω–µ–Ω–∏–µ"):
    dismissed_tag = TextInput(label="–¢–µ–≥ —É–≤–æ–ª—å–Ω—è–µ–º–æ–≥–æ (@user)", placeholder="@username")
    reason = TextInput(label="–ü—Ä–∏—á–∏–Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è", style=discord.TextStyle.paragraph)
    rank = TextInput(label="–° –∫–∞–∫–æ–≥–æ —Ä–∞–Ω–≥–∞ —É–≤–æ–ª—å–Ω—è—é—Ç", placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏")

    async def on_submit(self, interaction: discord.Interaction):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ —É–≤–æ–ª—å–Ω—è–µ–º–æ–≥–æ
        try:
            dismissed_id = int(self.dismissed_tag.value.replace("<@", "").replace(">", ""))
            dismissed_member = interaction.guild.get_member(dismissed_id)
            if not dismissed_member:
                await interaction.response.send_message("–£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
                return
            dismissed_nickname = dismissed_member.display_name
        except ValueError:
            await interaction.response.send_message("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–≥–∞ —É–≤–æ–ª—å–Ω—è–µ–º–æ–≥–æ. –£–∫–∞–∂–∏—Ç–µ @username.", ephemeral=True)
            return

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ —Ç–æ–≥–æ, –∫—Ç–æ —É–≤–æ–ª—å–Ω—è–µ—Ç
        dismissing_member = interaction.user
        dismissing_nickname = dismissing_member.display_name

        # –°–æ–∑–¥–∞–Ω–∏–µ embed-—Å–æ–æ–±—â–µ–Ω–∏—è
        embed = discord.Embed(title="–£–≤–æ–ª—å–Ω–µ–Ω–∏–µ", color=discord.Color.red())
        embed.set_thumbnail(url="https://cdn.discordapp.com/emojis/123456789012345678.png")  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ URL –∏–∫–æ–Ω–∫–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
        embed.add_field(name="–£–≤–æ–ª—å–Ω—è–µ–º—ã–π:", value=f"{self.dismissed_tag.value}\n**–ù–∏–∫:** {dismissed_nickname}", inline=True)
        embed.add_field(name="–£–≤–æ–ª—å–Ω—è–µ—Ç:", value=f"{dismissing_member.mention}\n**–ù–∏–∫:** {dismissing_nickname}", inline=True)
        embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞:", value=self.reason.value, inline=False)
        embed.add_field(name="–° –∫–∞–∫–æ–≥–æ —Ä–∞–Ω–≥–∞:", value=self.rank.value, inline=False)
        embed.set_footer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:")

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        view = DismissalView(dismissed_member)
        await interaction.response.send_message(embed=embed, view=view, ephemeral=False)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /—É–≤–æ–ª—å–Ω–µ–Ω–∏–µ
class DismissalView(View):
    def __init__(self, member: discord.Member):
        super().__init__()
        self.member = member

    @discord.ui.button(label="–ö–∏–∫–Ω—É—Ç—å", style=discord.ButtonStyle.danger, emoji="üö™")
    async def kick_button(self, interaction: discord.Interaction, button: Button):
        if self.member:
            try:
                await self.member.kick(reason="–£–≤–æ–ª—å–Ω–µ–Ω–∏–µ")
                await interaction.response.send_message(f"{self.member.mention} –±—ã–ª –∫–∏–∫–Ω—É—Ç.", ephemeral=True)
            except discord.Forbidden:
                await interaction.response.send_message("–£ –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∫–∏–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞.", ephemeral=True)
        else:
            await interaction.response.send_message("–£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)

    @discord.ui.button(label="–°–Ω—è—Ç—å —Ä–æ–ª–∏", style=discord.ButtonStyle.secondary, emoji="üõë")
    async def remove_roles_button(self, interaction: discord.Interaction, button: Button):
        if self.member:
            try:
                await self.member.edit(roles=[])
                await interaction.response.send_message(f"–£ {self.member.mention} —Å–Ω—è—Ç—ã –≤—Å–µ —Ä–æ–ª–∏.", ephemeral=True)
            except discord.Forbidden:
                await interaction.response.send_message("–£ –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏.", ephemeral=True)
        else:
            await interaction.response.send_message("–£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)

# –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /–ø—Ä–∏–Ω—è—Ç–∏–µ
class AcceptanceModal(Modal, title="–ü—Ä–∏–Ω—è—Ç–∏–µ"):
    accepted_tag = TextInput(label="–¢–µ–≥ –ø—Ä–∏–Ω–∏–º–∞–µ–º–æ–≥–æ (@user)", placeholder="@username")
    acceptor_tag = TextInput(label="–¢–µ–≥ –ø—Ä–∏–Ω–∏–º–∞—é—â–µ–≥–æ (@user)", placeholder="@username")

    async def on_submit(self, interaction: discord.Interaction):
        try:
            accepted_id = int(self.accepted_tag.value.replace("<@", "").replace(">", ""))
            accepted_member = interaction.guild.get_member(accepted_id)
            if not accepted_member:
                await interaction.response.send_message("–£—á–∞—Å—Ç–Ω–∏–∫ (–ø—Ä–∏–Ω–∏–º–∞–µ–º—ã–π) –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
                return
            accepted_nickname = accepted_member.display_name
        except ValueError:
            await interaction.response.send_message("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–≥–∞ –ø—Ä–∏–Ω–∏–º–∞–µ–º–æ–≥–æ. –£–∫–∞–∂–∏—Ç–µ @username.", ephemeral=True)
            return

        try:
            acceptor_id = int(self.acceptor_tag.value.replace("<@", "").replace(">", ""))
            acceptor_member = interaction.guild.get_member(acceptor_id)
            if not acceptor_member:
                await interaction.response.send_message("–£—á–∞—Å—Ç–Ω–∏–∫ (–ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π) –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
                return
            acceptor_nickname = acceptor_member.display_name
        except ValueError:
            await interaction.response.send_message("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–≥–∞ –ø—Ä–∏–Ω–∏–º–∞—é—â–µ–≥–æ. –£–∫–∞–∂–∏—Ç–µ @username.", ephemeral=True)
            return

        embed = discord.Embed(title="–ü—Ä–∏–Ω—è—Ç–∏–µ", color=discord.Color.green())
        embed.add_field(name="–ü—Ä–∏–Ω–∏–º–∞–µ–º—ã–π:", value=f"{self.accepted_tag.value}\n**–ù–∏–∫:** {accepted_nickname}", inline=True)
        embed.add_field(name="–ü—Ä–∏–Ω–∏–º–∞—é—â–∏–π:", value=f"{self.acceptor_tag.value}\n**–ù–∏–∫:** {acceptor_nickname}", inline=True)
        await interaction.response.send_message(embed=embed, ephemeral=False)

# –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /–ø–æ–≤—ã—à–µ–Ω–∏–µ
class PromotionModal(Modal, title="–ü–æ–≤—ã—à–µ–Ω–∏–µ"):
    promoted_tag = TextInput(label="–¢–µ–≥ –ø–æ–≤—ã—à–∞–µ–º–æ–≥–æ (@user)", placeholder="@username")
    promoter_tag = TextInput(label="–¢–µ–≥ –ø–æ–≤—ã—à–∞—é—â–µ–≥–æ (@user)", placeholder="@username")
    from_rank = TextInput(label="–° –∫–∞–∫–æ–≥–æ —Ä–∞–Ω–≥–∞", placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏")
    to_rank = TextInput(label="–ù–∞ –∫–∞–∫–æ–π —Ä–∞–Ω–≥", placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏")
    reason = TextInput(label="–ü—Ä–∏—á–∏–Ω–∞ –ø–æ–≤—ã—à–µ–Ω–∏—è", style=discord.TextStyle.paragraph)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            promoted_id = int(self.promoted_tag.value.replace("<@", "").replace(">", ""))
            promoted_member = interaction.guild.get_member(promoted_id)
            if not promoted_member:
                await interaction.response.send_message("–£—á–∞—Å—Ç–Ω–∏–∫ (–ø–æ–≤—ã—à–∞–µ–º—ã–π) –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
                return
            promoted_nickname = promoted_member.display_name
        except ValueError:
            await interaction.response.send_message("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–≥–∞ –ø–æ–≤—ã—à–∞–µ–º–æ–≥–æ. –£–∫–∞–∂–∏—Ç–µ @username.", ephemeral=True)
            return

        try:
            promoter_id = int(self.promoter_tag.value.replace("<@", "").replace(">", ""))
            promoter_member = interaction.guild.get_member(promoter_id)
            if not promoter_member:
                await interaction.response.send_message("–£—á–∞—Å—Ç–Ω–∏–∫ (–ø–æ–≤—ã—à–∞—é—â–∏–π) –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
                return
            promoter_nickname = promoter_member.display_name
        except ValueError:
            await interaction.response.send_message("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–≥–∞ –ø–æ–≤—ã—à–∞—é—â–µ–≥–æ. –£–∫–∞–∂–∏—Ç–µ @username.", ephemeral=True)
            return

        # –ü–æ–∏—Å–∫ —Ä–æ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        from_role = discord.utils.get(interaction.guild.roles, name=self.from_rank.value)
        to_role = discord.utils.get(interaction.guild.roles, name=self.to_rank.value)

        if not from_role:
            await interaction.response.send_message(f"–†–æ–ª—å '{self.from_rank.value}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
            return
        if not to_role:
            await interaction.response.send_message(f"–†–æ–ª—å '{self.to_rank.value}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
            return

        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π
        try:
            if from_role in promoted_member.roles:
                await promoted_member.remove_roles(from_role)
            await promoted_member.add_roles(to_role)
        except discord.Forbidden:
            await interaction.response.send_message("–£ –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏.", ephemeral=True)
            return

        embed = discord.Embed(title="–ü–æ–≤—ã—à–µ–Ω–∏–µ", color=discord.Color.blue())
        embed.add_field(name="–ü–æ–≤—ã—à–∞–µ–º—ã–π:", value=f"{self.promoted_tag.value}\n**–ù–∏–∫:** {promoted_nickname}", inline=True)
        embed.add_field(name="–ü–æ–≤—ã—à–∞—é—â–∏–π:", value=f"{self.promoter_tag.value}\n**–ù–∏–∫:** {promoter_nickname}", inline=True)
        embed.add_field(name="–° –∫–∞–∫–æ–≥–æ —Ä–∞–Ω–≥–∞:", value=self.from_rank.value, inline=False)
        embed.add_field(name="–ù–∞ –∫–∞–∫–æ–π —Ä–∞–Ω–≥:", value=self.to_rank.value, inline=False)
        embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞:", value=self.reason.value, inline=False)
        await interaction.response.send_message(embed=embed, ephemeral=False)

# –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /–ø–æ–Ω–∏–∂–µ–Ω–∏–µ
class DemotionModal(Modal, title="–ü–æ–Ω–∏–∂–µ–Ω–∏–µ"):
    demoted_tag = TextInput(label="–¢–µ–≥ –ø–æ–Ω–∏–∂–∞–µ–º–æ–≥–æ (@user)", placeholder="@username")
    demoter_tag = TextInput(label="–¢–µ–≥ –ø–æ–Ω–∏–∂–∞—é—â–µ–≥–æ (@user)", placeholder="@username")
    from_rank = TextInput(label="–° –∫–∞–∫–æ–≥–æ —Ä–∞–Ω–≥–∞", placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏")
    to_rank = TextInput(label="–ù–∞ –∫–∞–∫–æ–π —Ä–∞–Ω–≥", placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏")
    reason = TextInput(label="–ü—Ä–∏—á–∏–Ω–∞ –ø–æ–Ω–∏–∂–µ–Ω–∏—è", style=discord.TextStyle.paragraph)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            demoted_id = int(self.demoted_tag.value.replace("<@", "").replace(">", ""))
            demoted_member = interaction.guild.get_member(demoted_id)
            if not demoted_member:
                await interaction.response.send_message("–£—á–∞—Å—Ç–Ω–∏–∫ (–ø–æ–Ω–∏–∂–∞–µ–º—ã–π) –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
                return
            demoted_nickname = demoted_member.display_name
        except ValueError:
            await interaction.response.send_message("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–≥–∞ –ø–æ–Ω–∏–∂–∞–µ–º–æ–≥–æ. –£–∫–∞–∂–∏—Ç–µ @username.", ephemeral=True)
            return

        try:
            demoter_id = int(self.demoter_tag.value.replace("<@", "").replace(">", ""))
            demoter_member = interaction.guild.get_member(demoter_id)
            if not demoter_member:
                await interaction.response.send_message("–£—á–∞—Å—Ç–Ω–∏–∫ (–ø–æ–Ω–∏–∂–∞—é—â–∏–π) –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
                return
            demoter_nickname = demoter_member.display_name
        except ValueError:
            await interaction.response.send_message("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–≥–∞ –ø–æ–Ω–∏–∂–∞—é—â–µ–≥–æ. –£–∫–∞–∂–∏—Ç–µ @username.", ephemeral=True)
            return

        # –ü–æ–∏—Å–∫ —Ä–æ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        from_role = discord.utils.get(interaction.guild.roles, name=self.from_rank.value)
        to_role = discord.utils.get(interaction.guild.roles, name=self.to_rank.value)

        if not from_role:
            await interaction.response.send_message(f"–†–æ–ª—å '{self.from_rank.value}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
            return
        if not to_role:
            await interaction.response.send_message(f"–†–æ–ª—å '{self.to_rank.value}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
            return

        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π
        try:
            if from_role in demoted_member.roles:
                await demoted_member.remove_roles(from_role)
            await demoted_member.add_roles(to_role)
        except discord.Forbidden:
            await interaction.response.send_message("–£ –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏.", ephemeral=True)
            return

        embed = discord.Embed(title="–ü–æ–Ω–∏–∂–µ–Ω–∏–µ", color=discord.Color.orange())
        embed.add_field(name="–ü–æ–Ω–∏–∂–∞–µ–º—ã–π:", value=f"{self.demoted_tag.value}\n**–ù–∏–∫:** {demoted_nickname}", inline=True)
        embed.add_field(name="–ü–æ–Ω–∏–∂–∞—é—â–∏–π:", value=f"{self.demoter_tag.value}\n**–ù–∏–∫:** {demoter_nickname}", inline=True)
        embed.add_field(name="–° –∫–∞–∫–æ–≥–æ —Ä–∞–Ω–≥–∞:", value=self.from_rank.value, inline=False)
        embed.add_field(name="–ù–∞ –∫–∞–∫–æ–π —Ä–∞–Ω–≥:", value=self.to_rank.value, inline=False)
        embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞:", value=self.reason.value, inline=False)
        await interaction.response.send_message(embed=embed, ephemeral=False)

# –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /–æ—Ç—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ
class SuspensionModal(Modal, title="–û—Ç—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ"):
    suspended_tag = TextInput(label="–¢–µ–≥ –æ—Ç—Å—Ç—Ä–∞–Ω—è–µ–º–æ–≥–æ (@user)", placeholder="@username")
    suspender_tag = TextInput(label="–¢–µ–≥ –æ—Ç—Å—Ç—Ä–∞–Ω—è—é—â–µ–≥–æ (@user)", placeholder="@username")
    reason = TextInput(label="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è", style=discord.TextStyle.paragraph)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            suspended_id = int(self.suspended_tag.value.replace("<@", "").replace(">", ""))
            suspended_member = interaction.guild.get_member(suspended_id)
            if not suspended_member:
                await interaction.response.send_message("–£—á–∞—Å—Ç–Ω–∏–∫ (–æ—Ç—Å—Ç—Ä–∞–Ω—è–µ–º—ã–π) –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
                return
            suspended_nickname = suspended_member.display_name
        except ValueError:
            await interaction.response.send_message("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–≥–∞ –æ—Ç—Å—Ç—Ä–∞–Ω—è–µ–º–æ–≥–æ. –£–∫–∞–∂–∏—Ç–µ @username.", ephemeral=True)
            return

        try:
            suspender_id = int(self.suspender_tag.value.replace("<@", "").replace(">", ""))
            suspender_member = interaction.guild.get_member(suspender_id)
            if not suspender_member:
                await interaction.response.send_message("–£—á–∞—Å—Ç–Ω–∏–∫ (–æ—Ç—Å—Ç—Ä–∞–Ω—è—é—â–∏–π) –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
                return
            suspender_nickname = suspender_member.display_name
        except ValueError:
            await interaction.response.send_message("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–≥–∞ –æ—Ç—Å—Ç—Ä–∞–Ω—è—é—â–µ–≥–æ. –£–∫–∞–∂–∏—Ç–µ @username.", ephemeral=True)
            return

        embed = discord.Embed(title="–û—Ç—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ", color=discord.Color.purple())
        embed.add_field(name="–û—Ç—Å—Ç—Ä–∞–Ω—è–µ–º—ã–π:", value=f"{self.suspended_tag.value}\n**–ù–∏–∫:** {suspended_nickname}", inline=True)
        embed.add_field(name="–û—Ç—Å—Ç—Ä–∞–Ω—è—é—â–∏–π:", value=f"{self.suspender_tag.value}\n**–ù–∏–∫:** {suspender_nickname}", inline=True)
        embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞:", value=self.reason.value, inline=False)
        await interaction.response.send_message(embed=embed, ephemeral=False)

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
@tree.command(name="—É–≤–æ–ª—å–Ω–µ–Ω–∏–µ", description="–£–≤–æ–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞")
async def dismissal(interaction: discord.Interaction):
    await interaction.response.send_modal(DismissalModal())

@tree.command(name="–ø—Ä–∏–Ω—è—Ç–∏–µ", description="–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞")
async def acceptance(interaction: discord.Interaction):
    await interaction.response.send_modal(AcceptanceModal())

@tree.command(name="–ø–æ–≤—ã—à–µ–Ω–∏–µ", description="–ü–æ–≤—ã—Å–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞")
async def promotion(interaction: discord.Interaction):
    await interaction.response.send_modal(PromotionModal())

@tree.command(name="–ø–æ–Ω–∏–∂–µ–Ω–∏–µ", description="–ü–æ–Ω–∏–∑–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞")
async def demotion(interaction: discord.Interaction):
    await interaction.response.send_modal(DemotionModal())

@tree.command(name="–æ—Ç—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ", description="–û—Ç—Å—Ç—Ä–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞")
async def suspension(interaction: discord.Interaction):
    await interaction.response.send_modal(SuspensionModal())

# –°–æ–±—ã—Ç–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
@client.event
async def on_ready():
    print(f"–ë–æ—Ç {client.user} –≥–æ—Ç–æ–≤!")
    await tree.sync()  # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    async with client:
        client.run("MTM5MDAzMzc4Nzc2MDY3NzA0NQ.GTfxw1.s3RLF30NJS1q2LZP5Kb8HViNM5lo5-15qqwdiA")  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞

if __name__ == "__main__":
    asyncio.run(main())
